name: My Portfolio CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # Create prisma client for unit tests
      - name: Generate Prisma Client
        run: pnpm generate

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # Build PostgreSQL Database Image for games-api & crud-api Unit Tests
      - name: Build PostgreSQL Test Database Image
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: pnpx nx docker-build-db-test games-api --build-arg POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD}}

      # Start PostgreSQL Test Database Image
      - name: Start PostgreSQL Test Database Container
        run: pnpx nx docker-start-db games-api
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      # Lint all projects
      - name: Lint all projects
        run: pnpm exec nx affecred -t lint

      # Test all projects
      - name: Test all projects
        run: pnpm exec nx affecred -test

        #Build all projects
      - name: Build all Projects
        env:
          NODE_ENV: 'testing'
        run: pnpm exec nx affected -t build
